/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-04-11 02:18:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class service_005fcenter_005fmain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/JAVA/workspace_Spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ShoppingMall/WEB-INF/lib/jstl-1.2.jar!/META-INF/c-1_0-rt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1552007909666L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>서비스 센터</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t@font-face {\r\n");
      out.write("\t\tfont-family: 'KOMACON';\r\n");
      out.write("\t\tsrc: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_seven@1.2/KOMACON.woff')format('woff');\r\n");
      out.write("\t\tfont-weight: normal;\r\n");
      out.write("\t\tfont-style: normal;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.serviceMain {\r\n");
      out.write("\t\twidth: 1100px;\r\n");
      out.write("\t\tmargin: auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.topTitleDiv {\r\n");
      out.write("\t\tmargin: auto;\r\n");
      out.write("\t\twidth: 100%;\t\r\n");
      out.write("\t\theight: 120px;\r\n");
      out.write("\t\tmargin-top: 30px;\r\n");
      out.write("\t\tpadding-left: 50px;\r\n");
      out.write("\t\tpadding-bottom: 10px;\r\n");
      out.write("\t\tbackground: #D0D0D0;\r\n");
      out.write("\t\tborder-radius: 20px;\r\n");
      out.write("\t\tfont-family: 'KOMACON';\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.topTitleDiv img {\r\n");
      out.write("\t\twidth: 110px;\r\n");
      out.write("\t\theight: 110px;\r\n");
      out.write("\t\topacity: 0.5;\r\n");
      out.write("\t\tmargin-top: 10px;\r\n");
      out.write("\t\tmargin-right: 30px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.menuDiv {\r\n");
      out.write("\t\tfloat: left;\r\n");
      out.write("\t\tfont-size: large;\r\n");
      out.write("\t\tfont-family: 'KOMACON';\r\n");
      out.write("\t\tpadding-left: 50px;\r\n");
      out.write("\t\tmargin-top: 30px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.menuDiv a {\r\n");
      out.write("\t\tcolor: #000000;\r\n");
      out.write("\t\ttext-decoration: none;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.menuDiv ul {\r\n");
      out.write("\t\tlist-style-type: none;\r\n");
      out.write("\t\tpadding-left: 0px;\r\n");
      out.write("\t}\t\r\n");
      out.write("\t\r\n");
      out.write("\t.menuDiv ins {\r\n");
      out.write("\t\tfont-size: larger;\r\n");
      out.write("\t\ttext-decoration: none;\r\n");
      out.write("\t\theight: 50px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.one-on-one {\r\n");
      out.write("\t\twidth: 120px;\r\n");
      out.write("\t\theight: 120px;\r\n");
      out.write("\t\tborder-radius: 100px;\r\n");
      out.write("\t\tbackground: #F15B42;\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.one-on-one a {\r\n");
      out.write("\t\tcolor: white;\r\n");
      out.write("\t\tfont-size: x-large;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.board {\r\n");
      out.write("\t\tbackground: #F15B42;\r\n");
      out.write("\t\tfloat: right;\r\n");
      out.write("\t\twidth: 75%;\r\n");
      out.write("\t\theight: 600px;\r\n");
      out.write("\t\tborder-radius: 50px;\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t\tmargin-top: 20px;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("<!-- 팝업 -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction winPop(url, opts) {\r\n");
      out.write("\t\tvar popupName = opts.name || 'popup';\r\n");
      out.write("\t\tvar options = '';\r\n");
      out.write("\t\toptions += 'width=' + (opts.width ? opts.width : 200) + ', height='\r\n");
      out.write("\t\t\t\t+ (opts.height ? opts.height : 200);\r\n");
      out.write("\t\toptions += opts.left && opts.width ? ', left=' + opts.left : ', left='\r\n");
      out.write("\t\t\t\t+ ((screen.availWidth - opts.width) / 2);\r\n");
      out.write("\t\toptions += opts.top && opts.height ? ', top=' + opts.top : ', top='\r\n");
      out.write("\t\t\t\t+ ((screen.availHeight - opts.height) / 2);\r\n");
      out.write("\t\toptions += opts.scrollbars ? ', scrollbars=' + opts.scrollbars\r\n");
      out.write("\t\t\t\t: ', scrollbars=no';\r\n");
      out.write("\t\toptions += opts.resizable ? ', resizable=' + opts.resizable\r\n");
      out.write("\t\t\t\t: ', resizable=no';\r\n");
      out.write("\t\tconsole.log(popupName);\r\n");
      out.write("\t\twindow.open(url, popupName, options);\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu_top.jsp", out, false);
      out.write("\r\n");
      out.write("\t</div>\t\t\r\n");
      out.write("\t<!-- MENU_TOP -->\r\n");
      out.write("\t<div class=\"serviceMain\">\r\n");
      out.write("\t\t<!-- 고객센터 타이틀 -->\r\n");
      out.write("\t\t<div class=\"topTitleDiv\" onclick=\"location.href='serviceCenter.do'\">\r\n");
      out.write("\t\t\t<div style=\"float: left; width: 50%;\">\r\n");
      out.write("\t\t\t\t<h1>고객센터</h1>\r\n");
      out.write("\t\t\t\t<h4>고객님의 목소리에 항상 귀기울이겠습니다.</h4>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div style=\"float: right;\">\r\n");
      out.write("\t\t\t\t<img src=\"img/serviceman.png\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div style=\"width: 100%; height: 30px;\"></div>\r\n");
      out.write("\t\t<!-- 오른쪽 메뉴 -->\r\n");
      out.write("\t\t<div class=\"menuDiv\">\r\n");
      out.write("\t\t\t<div class=\"one-on-one\">\r\n");
      out.write("\t\t\t\t<div style=\"height: 20px;\"></div>\r\n");
      out.write("\t\t\t\t<a href=\"adviceService.do\" onclick=\"winPop(this.href, {name:'팝업1',width:600,height:800}); return false;\">\r\n");
      out.write("\t\t\t\t1:1<br>상담신청</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div style=\"height: 20px;\"></div>\r\n");
      out.write("\t\t\t<ul>\r\n");
      out.write("\t\t\t\t<ins>&gt;&nbsp;&nbsp;주문 QnA</ins>\r\n");
      out.write("\t\t\t\t<li><a href=\"\">주문/결제</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"\">배송</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"\">주문변경/취소</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"\">반품/교환/AS</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"\">환불</a></li>\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- FAQ -->\r\n");
      out.write("\t\t<div class=\"board\">\r\n");
      out.write("\t\t\t<h1>보드 DIV</h1>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
