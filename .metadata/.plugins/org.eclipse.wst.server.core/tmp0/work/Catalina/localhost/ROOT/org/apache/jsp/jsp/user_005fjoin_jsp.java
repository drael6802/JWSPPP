/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-07-19 09:07:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class user_005fjoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>JOIN</title>\r\n");
      out.write("\t<!-- 제이쿼리 -->\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js\"></script>\r\n");
      out.write("\t<!--제이쿼리 스크립트 경로 -->\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"../js/user_join.js?ver=6\"></script>\r\n");
      out.write("\t<!--CSS속성  -->\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"\" >\r\n");
      out.write("\t\r\n");
      out.write("\t<script src=\"http://dmaps.daum.net/map_js_init/postcode.v2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("// 주소 카카오 api js\r\n");
      out.write("function sample6_execDaumPostcode() {\r\n");
      out.write("\tnew daum.Postcode(\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\toncomplete : function(data) {\r\n");
      out.write("\t\t\t\t\t// 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("\t\t\t\t\t// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("\t\t\t\t\tvar addr = ''; // 주소 변수\r\n");
      out.write("\t\t\t\t\tvar extraAddr = ''; // 참고항목 변수\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n");
      out.write("\t\t\t\t\tif (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\taddr = data.roadAddress;\r\n");
      out.write("\t\t\t\t\t} else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n");
      out.write("\t\t\t\t\t\taddr = data.jibunAddress;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n");
      out.write("\t\t\t\t\tif (data.userSelectedType === 'R') {\r\n");
      out.write("\t\t\t\t\t\t// 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("\t\t\t\t\t\t// 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("\t\t\t\t\t\tif (data.bname !== ''\r\n");
      out.write("\t\t\t\t\t\t\t\t&& /[동|로|가]$/g.test(data.bname)) {\r\n");
      out.write("\t\t\t\t\t\t\textraAddr += data.bname;\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t// 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("\t\t\t\t\t\tif (data.buildingName !== ''\r\n");
      out.write("\t\t\t\t\t\t\t\t&& data.apartment === 'Y') {\r\n");
      out.write("\t\t\t\t\t\t\textraAddr += (extraAddr !== '' ? ', '\r\n");
      out.write("\t\t\t\t\t\t\t\t\t+ data.buildingName : data.buildingName);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t// 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("\t\t\t\t\t\tif (extraAddr !== '') {\r\n");
      out.write("\t\t\t\t\t\t\textraAddr = ' (' + extraAddr + ')';\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t// 조합된 참고항목을 해당 필드에 넣는다.\r\n");
      out.write("\t\t\t\t\t\tdocument.getElementById(\"sample6_extraAddress\").value = extraAddr;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\tdocument.getElementById(\"sample6_extraAddress\").value = '';\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t// 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("\t\t\t\t\tdocument.getElementById('sample6_postcode').value = data.zonecode;\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"sample6_address\").value = addr;\r\n");
      out.write("\t\t\t\t\t// 커서를 상세주소 필드로 이동한다.\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"sample6_detailAddress\")\r\n");
      out.write("\t\t\t\t\t\t\t.focus();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}).open();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\t\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t.joinForm {width: 1000px; font-size: large;}\r\n");
      out.write("\t.joinForm .topTitle {\r\n");
      out.write("\t\tfont-family: 'KOMACON';\r\n");
      out.write("\t\tfont-size: large;\r\n");
      out.write("\t}\r\n");
      out.write("\t.topTitle h1 {font-family: 'Binggrae-Bold';}\r\n");
      out.write("\t.joinForm table {\r\n");
      out.write("\t\tmargin: auto;\r\n");
      out.write("\t\twidth: 100%;\r\n");
      out.write("\t\ttext-align: left;\r\n");
      out.write("\t\tborder-collapse: collapse;\r\n");
      out.write("\t\tborder: none;\t\t\r\n");
      out.write("\t}\t\r\n");
      out.write("\t.joinForm tr {border: none;}\r\n");
      out.write("\t.joinForm th,td {\r\n");
      out.write("\t\tborder-color: #D0D0D0;\r\n");
      out.write("\t\tborder-left: none;\r\n");
      out.write("\t\tborder-right: none;\r\n");
      out.write("\t\tpadding: 5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.joinForm th {\r\n");
      out.write("\t\twidth: 200px;\r\n");
      out.write("\t\theight: 50px;\r\n");
      out.write("\t\tpadding-left: 60px;\r\n");
      out.write("\t\tfont-family: 'Binggrae-Bold';\r\n");
      out.write("\t}\t\r\n");
      out.write("\t.joinForm td {\r\n");
      out.write("\t\tpadding-left: 15px;\r\n");
      out.write("\t\tfont-family: 'KOMACON';\r\n");
      out.write("\t}\r\n");
      out.write("\t.joinForm hr {\r\n");
      out.write("\t\theight: 3px;\r\n");
      out.write("\t\tbackground-color: #ed6161;\r\n");
      out.write("\t\tborder-radius: 10px;\r\n");
      out.write("\t\tmargin: 5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.joinForm input {\r\n");
      out.write("\t\twidth: 180px;\r\n");
      out.write("\t\theight: 30px;\r\n");
      out.write("\t\tfont-size: large;\r\n");
      out.write("\t\tfont-family: 'KOMACON';\r\n");
      out.write("\t\tpadding-left: 10px;\r\n");
      out.write("\t}\t\r\n");
      out.write("\t.joinForm button {\r\n");
      out.write("\t\tfont-size: medium;\r\n");
      out.write("\t\tborder: none;\r\n");
      out.write("\t\theight: 30px;\r\n");
      out.write("\t\twidth: 85px;\r\n");
      out.write("\t\tfont-family: 'Binggrae-Bold';\r\n");
      out.write("\t\tvertical-align: middle;\r\n");
      out.write("\t}\t\r\n");
      out.write("\t.joinForm select {\r\n");
      out.write("\t\tfont-size: medium;\r\n");
      out.write("\t\theight: 32px;\r\n");
      out.write("\t\twidth: 130px;\r\n");
      out.write("\t\tfont-family: 'KOMACON';\r\n");
      out.write("\t}\r\n");
      out.write("\t.addrDiv {\r\n");
      out.write("\t\theight: 90px;\r\n");
      out.write("\t}\t\r\n");
      out.write("\t.addrDiv input {width: 200px;}\r\n");
      out.write("\t.addrDiv button {\r\n");
      out.write("\t\twidth: 120px;\r\n");
      out.write("\t}\t\r\n");
      out.write("\t.pwCheck {\r\n");
      out.write("\t\tfont-size: medium;\r\n");
      out.write("\t}\r\n");
      out.write("\t.joinBtn{\r\n");
      out.write("\t\tmargin-top: 20px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.joinBtn button {\r\n");
      out.write("\t\theight: 50px;\r\n");
      out.write("\t\twidth: 200px;\r\n");
      out.write("\t\tfont-size: x-large;\r\n");
      out.write("\t\tbackground: #ed6161;\r\n");
      out.write("\t\tcolor: #fff;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tinput[type=\"number\"]::-webkit-outer-spin-button, input[type=\"number\"]::-webkit-inner-spin-button {-webkit-appearance: none;}\r\n");
      out.write("\tinput[type=\"password\"] {font-family: sans-serif; padding-right: 30px;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"joinForm\">\r\n");
      out.write("\t<div style=\"height: 100px;\" ></div>\r\n");
      out.write("\t<div align=\"left\" class=\"topTitle\">\r\n");
      out.write("\t\t<h1>회원가입</h1>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t빨간맛에 오신 것을 환영합니다.\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div style=\"height: 20px;\" ></div>\r\n");
      out.write("\t<hr>\r\n");
      out.write("<form action=\"userJoinProc.do\" method=\"post\">\r\n");
      out.write("\r\n");
      out.write("\t<table border=\"1\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th style=\"border: none;\">\r\n");
      out.write("\t\t\t\t아이디\r\n");
      out.write("\t\t\t</th>\r\n");
      out.write("\t\t\t<td style=\"border: none;\">\r\n");
      out.write("\t\t\t\t<div id=\"idContentDIV\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"userId\" name=\"userId\" maxlength=\"15\" required/>\r\n");
      out.write("\t\t\t\t\t<!-- <input type=\"button\" id=\"idCheckBtn\" name=\"\" value=\"중복체크\"/> -->\r\n");
      out.write("\t\t\t\t\t<button id=\"idCheckBtn\" name=\"\">중복체크</button>\r\n");
      out.write("\t\t\t\t\t<label style=\"font-size: medium; color: #808080; padding-left: 10px;\">\r\n");
      out.write("\t\t\t\t\t\t* 영문과 숫자만 입력 가능 합니다.\r\n");
      out.write("\t\t\t\t\t</label>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>\r\n");
      out.write("\t\t\t\t비밀번호\r\n");
      out.write("\t\t\t</th>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"password\" id=\"userPassword\" name=\"userPassword\" maxlength=\"20\" required/>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>\r\n");
      out.write("\t\t\t\t비밀번호 확인\r\n");
      out.write("\t\t\t</th>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"password\" id=\"userPasswordCheck\" maxlength=\"20\" required/>\r\n");
      out.write("\t\t\t\t<label class=\"danger pwCheck\" id=\"danger\" style=\"color: red;\">비밀번호가 일치하지 않습니다.</label>\r\n");
      out.write("\t\t\t\t<label class=\"success pwCheck\" id=\"success\" style=\"color: green;\">비밀번호가 일치합니다.</label>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>\r\n");
      out.write("\t\t\t\t이름\r\n");
      out.write("\t\t\t</th>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"text\" id=\"userName\" name=\"userName\" maxlength=\"10\" required />\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>\r\n");
      out.write("\t\t\t\t주소\r\n");
      out.write("\t\t\t</th>\r\n");
      out.write("\t\t\t<td class=\"addrDiv\">\r\n");
      out.write("\t\t\t\t<div style=\"text-align: left;\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"sample6_postcode\" placeholder=\"우편번호\" readonly/>\r\n");
      out.write("\t\t\t\t\t<!-- <input type=\"button\" onclick=\"sample6_execDaumPostcode()\" value=\"우편번호 찾기\"/><br> -->\r\n");
      out.write("\t\t\t\t\t<button onclick=\"sample6_execDaumPostcode()\">우편번호 찾기</button>\r\n");
      out.write("\t\t\t\t\t<div style=\"height: 5px;\"></div>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"sample6_address\" placeholder=\"주소\" readonly/>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"sample6_detailAddress\" placeholder=\"상세주소\" maxlength=\"50\"/>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"sample6_extraAddress\" placeholder=\"참고항목\" readonly/>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>\r\n");
      out.write("\t\t\t\t전화번호\r\n");
      out.write("\t\t\t</th>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<select id=\"userPhone1\">\r\n");
      out.write("\t\t\t\t\t<option>010</option>\r\n");
      out.write("\t\t\t\t\t<option>011</option>\r\n");
      out.write("\t\t\t\t\t<option>013</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t-\r\n");
      out.write("\t\t\t\t<input type=\"number\" id=\"userPhone2\" required maxlength=\"5\"/>\r\n");
      out.write("\t\t\t\t-\r\n");
      out.write("\t\t\t\t<input type=\"number\" id=\"userPhone3\" required maxlength=\"5\"/>\t\t\t\t\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>\r\n");
      out.write("\t\t\t\t이메일\r\n");
      out.write("\t\t\t</th>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"email\" id=\"userEmail1\" name=\"userEmail1\" required maxlength=\"15\"/> @\r\n");
      out.write("\t\t\t\t<input type=\"text\" id=\"userEmail2\" name=\"userEmail2\"  required disabled required maxlength=\"15\"/>\r\n");
      out.write("\t\t\t\t<select id=\"emailSelecter\">\r\n");
      out.write("\t\t\t\t\t<option>naver.com</option>\r\n");
      out.write("\t\t\t\t\t<option>daum.net</option>\r\n");
      out.write("\t\t\t\t\t<option>google.com</option>\r\n");
      out.write("\t\t\t\t\t<option>nate.com</option>\r\n");
      out.write("\t\t\t\t\t<option id=\"directInput\">직접입력</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th style=\"border: none;\">\r\n");
      out.write("\t\t\t\t생년월일\r\n");
      out.write("\t\t\t</th>\r\n");
      out.write("\t\t\t<td style=\"border: none;\">\r\n");
      out.write("\t\t\t\t<input type=\"date\" id=\"userBirth\" name=\"userBirth\" value=\"2000-01-01\"/>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"joinBtn\">\r\n");
      out.write("\t\t<button id=\"joinBtn\">회원가입</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- <input type=\"button\" id=\"joinBtn\" value=\"회원가입\" class=\"joinBtn\"/> -->\r\n");
      out.write("\t<!-- <input type=\"button\" id=\"chcekBtn\" value=\"값 확인\" class=\"joinBtn\"/> -->\r\n");
      out.write("<div style=\"height: 150px;\"></div>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
