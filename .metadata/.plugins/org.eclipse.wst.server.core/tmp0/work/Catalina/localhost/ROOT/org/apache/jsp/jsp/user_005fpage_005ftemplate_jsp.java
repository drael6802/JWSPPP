/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-07-19 09:13:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class user_005fpage_005ftemplate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>빨간맛_회원</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t@font-face {\r\n");
      out.write("\t\tfont-family: 'Binggrae-Bold';\r\n");
      out.write("\t\tsrc: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_one@1.0/Binggrae-Bold.woff') format('woff');\r\n");
      out.write("\t\tfont-weight: normal;\r\n");
      out.write("\t\tfont-style: normal;\r\n");
      out.write("\t}\r\n");
      out.write("\t@font-face {\r\n");
      out.write("\t\tfont-family: 'KOMACON';\r\n");
      out.write("\t\tsrc: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_seven@1.2/KOMACON.woff')format('woff');\r\n");
      out.write("\t\tfont-weight: normal;\r\n");
      out.write("\t\tfont-style: normal;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t.myPageTempl {\r\n");
      out.write("\t\tmargin: 0 auto;\r\n");
      out.write("\t\twidth: 1000px;\r\n");
      out.write("\t\tmargin-top: 30px;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t.topTitle {\r\n");
      out.write("\t\tdisplay: inline-block;\r\n");
      out.write("\t\twidth: 100%;\r\n");
      out.write("\t\tpadding: 10px;\r\n");
      out.write("\t\tfont-size: 50px;\r\n");
      out.write("\t\tfont-family: 'Binggrae-Bold';\r\n");
      out.write("\t\ttext-align: center;\r\n");
      out.write("\t}\r\n");
      out.write("\t.myPageTempl table {text-align: center; font-size: 20px;}\r\n");
      out.write("\t\r\n");
      out.write("\t.myPageTempl a {color: black;}\r\n");
      out.write("\t\r\n");
      out.write("\t.title {\r\n");
      out.write("\t\tfont-family: 'Binggrae-Bold';\r\n");
      out.write("\t\tfont-size: x-large;\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\ttext-align: left;\r\n");
      out.write("\t\tmargin-top:55px;\r\n");
      out.write("\t\tmargin-bottom: 20px;\r\n");
      out.write("\t\tpadding-left: 30px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.leftMenu {width: 230px; vertical-align: top;}\r\n");
      out.write("\t.rightMenu {width: 750px; vertical-align: top;}\r\n");
      out.write("\t\r\n");
      out.write("\t.leftMenu .profile {\r\n");
      out.write("\t\theight: 150px; \r\n");
      out.write("\t\tmargin-top: 35px; \r\n");
      out.write("\t\tmargin-bottom: 35px; \r\n");
      out.write("\t\tfont-family: 'Binggrae-Bold';\r\n");
      out.write("\t}\r\n");
      out.write("\t.leftMenu .menu {height: 350px;}\r\n");
      out.write("\t.leftMenu div {\r\n");
      out.write("\t\twidth: 200px;\r\n");
      out.write("\t\tbackground-color: white;\r\n");
      out.write("\t\tborder-radius: 10px;\r\n");
      out.write("\t\tmargin: auto;\r\n");
      out.write("\t}\t\r\n");
      out.write("\t.leftMenu ul {\r\n");
      out.write("\t\tfont-family: 'Binggrae-Bold';\r\n");
      out.write("\t\tlist-style: disc;\r\n");
      out.write("\t\ttext-align: left;\r\n");
      out.write("\t\tfont-size: large;\r\n");
      out.write("\t}\r\n");
      out.write("\t.leftMenu ins {\r\n");
      out.write("\t\ttext-decoration: none;\r\n");
      out.write("\t\tfont-size: x-large;\r\n");
      out.write("\t\tline-height: 50px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.rightMenu .menu {width: 100%;}\r\n");
      out.write("\t\r\n");
      out.write("\tspan[class=\"title\"] + div {\r\n");
      out.write("\t\tbackground-color: white;\r\n");
      out.write("\t\tborder-radius: 10px;\r\n");
      out.write("\t\twidth: 100%;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\t@font-face {\r\n");
      out.write("\t\tfont-family: 'KOMACON';\r\n");
      out.write("\t\tsrc: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_seven@1.2/KOMACON.woff')format('woff');\r\n");
      out.write("\t\tfont-weight: normal;\r\n");
      out.write("\t\tfont-style: normal;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t.content {\r\n");
      out.write("\t\tmin-height: 70px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.board {font-family: 'KOMACON'; font-size: 20px; width: 750px;}\r\n");
      out.write("\t.board span {display: inline-block;}\r\n");
      out.write("\t.board .tr {\r\n");
      out.write("\t\tborder-top: 1px solid #585858;\r\n");
      out.write("\t\theight: 40px;\r\n");
      out.write("\t\tvertical-align: bottom;\r\n");
      out.write("\t\tpadding-top: 7px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.board a {\r\n");
      out.write("\t\tfont-family: 'KOMACON';\r\n");
      out.write("\t\ttext-decoration: none;\r\n");
      out.write("\t\tcolor: black;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.notice {}\r\n");
      out.write("\t.notice .col1 {width: 10%; }\r\n");
      out.write("\t.notice .col2 {width: 50%;}\r\n");
      out.write("\t.notice .col3 {width: 30%;}\r\n");
      out.write("\r\n");
      out.write("\t.qna {}\r\n");
      out.write("\t.qna .col1 {width: 10%;}\r\n");
      out.write("\t.qna .col2 {width: 20%;}\r\n");
      out.write("\t.qna .col3 {width: 60%;}\r\n");
      out.write("\t\t\r\n");
      out.write("\t.title {font-weight: bold; padding-bottom: 15px;}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 상단 -->\r\n");
      out.write("<div>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu_top.jsp", out, false);
      out.write("<br>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu_search.jsp", out, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "menu_main.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 마이페이지 -->\r\n");
      out.write("<div class=\"myPageTempl\">\r\n");
      out.write("\t<span class=\"topTitle\" onclick=\"location.href='userPage.do?userId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userInfo.userId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\">\r\n");
      out.write("\t\tMY PAGE\r\n");
      out.write("\t</span>\r\n");
      out.write("\t\r\n");
      out.write("\t<div style=\"background: #ed6161; border-radius: 10px; min-height: 1000px; margin-bottom: 100px;\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<!-- 왼쪽 -->\r\n");
      out.write("\t\t\t\t<td class=\"leftMenu\">\r\n");
      out.write("\t\t\t\t\t<!-- 프로필 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"profile\">\r\n");
      out.write("\t\t\t\t\t\t<span style=\"display: inline-block; width: 100%; position: relative; top: 50px;\">\r\n");
      out.write("\t\t\t\t\t\t\t환영합니다!<br>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userInfo.userId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("님\r\n");
      out.write("\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<!-- 메뉴 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t<div style=\"height: 20px;\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<ins>회원정보</ins>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"userInfoUpdate.do?userId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userInfo.userId }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">회원 정보수정</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<ins>쇼핑활동</ins>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"buyListInfo.do\">최근주문내역</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"likeListInfo.do\">찜한상품</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"reviewListInfo.do\">상품후기</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><a href=\"inquiryBoardList.do\">상품 문의</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<hr style=\"background-color: #585858; \">\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- 오른쪽 -->\r\n");
      out.write("\t\t\t\t<td class=\"rightMenu\">\r\n");
      out.write("\t\t\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, (java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${viewPage }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null), out, false);
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!--모달 -->\r\n");
      out.write("<div>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "user_page_modal.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!--하단  -->\r\n");
      out.write("<div>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "bottom.jsp", out, false);
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
