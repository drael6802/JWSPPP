/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-05-09 03:44:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class banner_005fleft_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/JAVA/workspace_Spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ShoppingMall/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1552007909666L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <title>jQuery UI Position - Image Cycler</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/resources/demos/style.css\">\r\n");
      out.write("  <style>\r\n");
      out.write("  body {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("  }\r\n");
      out.write("  #container {\r\n");
      out.write("    overflow: hidden;\r\n");
      out.write("    position: relative;\r\n");
      out.write("    height: 400px;\r\n");
      out.write("  }\r\n");
      out.write(" \r\n");
      out.write("  img {\r\n");
      out.write("    position: absolute;\r\n");
      out.write("  }\r\n");
      out.write("  </style>\r\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n");
      out.write("  <script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n");
      out.write("  <script>\r\n");
      out.write("  $( function() {\r\n");
      out.write("    function left( element, using ) {\r\n");
      out.write("      element.position({\r\n");
      out.write("        my: \"right middle\",\r\n");
      out.write("        at: \"left+25 middle\",\r\n");
      out.write("        of: \"#container\",\r\n");
      out.write("        collision: \"none\",\r\n");
      out.write("        using: using\r\n");
      out.write("      });\r\n");
      out.write("    }\r\n");
      out.write("    function right( element, using ) {\r\n");
      out.write("      element.position({\r\n");
      out.write("        my: \"left middle\",\r\n");
      out.write("        at: \"right-25 middle\",\r\n");
      out.write("        of: \"#container\",\r\n");
      out.write("        collision: \"none\",\r\n");
      out.write("        using: using\r\n");
      out.write("      });\r\n");
      out.write("    }\r\n");
      out.write("    function center( element, using ) {\r\n");
      out.write("      element.position({\r\n");
      out.write("        my: \"center middle\",\r\n");
      out.write("        at: \"center middle\",\r\n");
      out.write("        of: \"#container\",\r\n");
      out.write("        using: using\r\n");
      out.write("      });\r\n");
      out.write("    }\r\n");
      out.write(" \r\n");
      out.write("    left( $( \"img:eq(0)\" ) );\r\n");
      out.write("    center( $( \"img:eq(1)\" ) );\r\n");
      out.write("    right( $( \"img:eq(2)\" ) );\r\n");
      out.write(" \r\n");
      out.write("    function animate( to ) {\r\n");
      out.write("      $( this ).stop( true, false ).animate( to );\r\n");
      out.write("    }\r\n");
      out.write("    function next( event ) {\r\n");
      out.write("      event.preventDefault();\r\n");
      out.write("      center( $( \"img:eq(2)\" ), animate );\r\n");
      out.write("      left( $( \"img:eq(1)\" ), animate );\r\n");
      out.write("      right( $( \"img:eq(0)\" ).appendTo( \"#container\" ) );\r\n");
      out.write("    }\r\n");
      out.write("    function previous( event ) {\r\n");
      out.write("      event.preventDefault();\r\n");
      out.write("      center( $( \"img:eq(0)\" ), animate );\r\n");
      out.write("      right( $( \"img:eq(1)\" ), animate );\r\n");
      out.write("      left( $( \"img:eq(2)\" ).prependTo( \"#container\" ) );\r\n");
      out.write("    }\r\n");
      out.write("    $( \"#previous\" ).on( \"click\", previous );\r\n");
      out.write("    $( \"#next\" ).on( \"click\", next );\r\n");
      out.write(" \r\n");
      out.write("    $( \"img\" ).on( \"click\", function( event ) {\r\n");
      out.write("      $( \"img\" ).index( this ) === 0 ? previous( event ) : next( event );\r\n");
      out.write("    });\r\n");
      out.write(" \r\n");
      out.write("    $( window ).on( \"resize\", function() {\r\n");
      out.write("      left( $( \"img:eq(0)\" ), animate );\r\n");
      out.write("      center( $( \"img:eq(1)\" ), animate );\r\n");
      out.write("      right( $( \"img:eq(2)\" ), animate );\r\n");
      out.write("    });\r\n");
      out.write("  } );\r\n");
      out.write("  </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div align=\"center\" style=\"width: 800px;\">\r\n");
      out.write("<div id=\"container\" align=\"center\">\r\n");
      out.write("  <img src=\"../img/예지.gif\" width=\"458\" height=\"308\" alt=\"earth\">\r\n");
      out.write("  <img src=\"../img/bonobono.jpg\" width=\"512\" height=\"307\" alt=\"flight\">\r\n");
      out.write("  <img src=\"../img/galaxy_Buds.jpg\" width=\"300\" height=\"353\" alt=\"rocket\">\r\n");
      out.write(" \r\n");
      out.write("  <a id=\"previous\" href=\"#\">Previous</a>\r\n");
      out.write("  <a id=\"next\" href=\"#\">Next</a>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
